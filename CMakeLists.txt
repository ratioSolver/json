cmake_minimum_required(VERSION 3.5.0)
project(json VERSION 0.2.0 LANGUAGES CXX)
set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -fsanitize=undefined")

include(CTest)
enable_testing()

option(JSON_INCLUDE_UTILS "Include utils library" ON)
if(JSON_INCLUDE_UTILS)
    add_subdirectory(extern/utils)
endif()

add_library(json src/json.cpp)
add_dependencies(json utils)
target_compile_features(json PUBLIC cxx_std_17)
target_include_directories(json PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>)
target_link_libraries(json PUBLIC utils)

if(BUILD_TESTING)
    add_subdirectory(tests)
endif()

if(MSVC)
    target_compile_options(json PRIVATE /W4)
else()
    target_compile_options(json PRIVATE -Wall -Wextra -Wpedantic)
    if (ENABLE_COVERAGE)
        if (CMAKE_CXX_COMPILER_ID STREQUAL "GNU")
            target_compile_options(json PRIVATE --coverage)
            target_link_libraries(json PUBLIC gcov)
        endif()
    endif()
endif()

set(CPACK_PROJECT_NAME json)
set(CPACK_PROJECT_VERSION ${PROJECT_VERSION})
include(CPack)
